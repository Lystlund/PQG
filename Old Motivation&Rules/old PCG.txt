public void Quests(int QuestInputNumber){
            switch (QuestInputNumber)
            {
                case 1:
                    Knowledge KnowledgeQuest = new Knowledge();
                    rtb1.Text += KnowledgeQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                case 2:
                    Comfort ComfortQuest = new Comfort();
                    rtb1.Text += ComfortQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                case 3:
                    Reputation ReputationQuest = new Reputation();
                    rtb1.Text += ReputationQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                case 4:
                    Serenity SerenityQuest = new Serenity();
                    rtb1.Text += SerenityQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                case 5:
                    Protection ProtectionQuest = new Protection();
                    rtb1.Text += ProtectionQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                case 6:
                    Conquest ConquestQuest = new Conquest();
                    rtb1.Text += ConquestQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                case 7:
                    Wealth WealthQuest = new Wealth();
                    rtb1.Text += WealthQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                case 8:
                    Ability AbilityQuest = new Ability();
                    rtb1.Text += AbilityQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                case 9:
                    Equipment EquipmentQuest = new Equipment();
                    rtb1.Text += EquipmentQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                    break;

                default:
                    rtbQuest.Text += "No motivation have been selected! \n \n";
                    rtb1.Text += "No motivation have been selected! \n \n";
                    break;
            }
        }

        public void QuestsSelective(int QuestInputNumber)
        {
            switch (QuestInputNumber)
            {
            case 1:
                if (comboBox1.SelectedIndex == 0)
                {
                    Knowledge KnowledgeQuest = new Knowledge();
                    rtb1.Text += KnowledgeQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Knowledge KnowledgeQuest = new Knowledge();
                    KnowledgeQuest.CallOfKnowledge = comboBox1.SelectedIndex;
                    rtb1.Text += KnowledgeQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            case 2:
                if (comboBox1.SelectedIndex == 0)
                {
                    Comfort ComfortQuest = new Comfort();
                    rtb1.Text += ComfortQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Comfort ComfortQuest = new Comfort();
                    ComfortQuest.CallOfComfort = comboBox1.SelectedIndex;
                    rtb1.Text += ComfortQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            case 3:
                if (comboBox1.SelectedIndex == 0)
                {
                    Reputation ReputationQuest = new Reputation();
                    rtb1.Text += ReputationQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Reputation ReputationQuest = new Reputation();
                    ReputationQuest.CallofReputation = comboBox1.SelectedIndex;
                    rtb1.Text += ReputationQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            case 4:
                if (comboBox1.SelectedIndex == 0)
                {
                    Serenity SerenityQuest = new Serenity();
                    rtb1.Text += SerenityQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Serenity SerenityQuest = new Serenity();
                    SerenityQuest.CallOfSerenity = comboBox1.SelectedIndex;
                    rtb1.Text += SerenityQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            case 5:
                if (comboBox1.SelectedIndex == 0)
                {
                    Protection ProtectionQuest = new Protection();
                    rtb1.Text += ProtectionQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Protection ProtectionQuest = new Protection();
                    ProtectionQuest.CallOfProtection = comboBox1.SelectedIndex;
                    rtb1.Text += ProtectionQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            case 6:
                if (comboBox1.SelectedIndex == 0)
                {
                    Conquest ConquestQuest = new Conquest();
                    rtb1.Text += ConquestQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Conquest ConquestQuest = new Conquest();
                    ConquestQuest.CallofConquest = comboBox1.SelectedIndex;
                    rtb1.Text += ConquestQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            case 7:
                if (comboBox1.SelectedIndex == 0)
                {
                    Wealth WealthQuest = new Wealth();
                    rtb1.Text += WealthQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Wealth WealthQuest = new Wealth();
                    WealthQuest.CallofWealth = comboBox1.SelectedIndex;
                    rtb1.Text += WealthQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            case 8:
                if (comboBox1.SelectedIndex == 0)
                {
                    Ability AbilityQuest = new Ability();
                    rtb1.Text += AbilityQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Ability AbilityQuest = new Ability();
                    AbilityQuest.CallOfAbility = comboBox1.SelectedIndex;
                    rtb1.Text += AbilityQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            case 9:
                if (comboBox1.SelectedIndex == 0)
                {
                    Equipment EquipmentQuest = new Equipment();
                    rtb1.Text += EquipmentQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                else
                {
                    Equipment EquipmentQuest = new Equipment();
                    EquipmentQuest.CallOfEquipment = comboBox1.SelectedIndex;
                    rtb1.Text += EquipmentQuest.returnMsg(out holder);
                    rtbQuest.Text += holder;
                }
                break;

            default:
                rtbQuest.Text += "No motivation have been selected! \n \n";
                rtb1.Text += "No motivation have been selected! \n \n";
                break;
            }
        }